import pandas as pd
from collections import OrderedDict

param_dict = {
    "tau_E": 0.0,
    "V_A": 0.05,
    "V_T": 0.05,
    "GammaP_Pho": 0.3127,
    "GammanLA_EpsA": 0.0412,
    "GammaY_EpsY": 0.0638,
    "GammaT_LT": 0.3748,
    "GammaFi_EFi": 0.228,
    "GammaEps_EEps": 0.9433,
    "GammaEps_AB": 0.0037,
    "GammaP_EP": 0.1095,
    "GammanLA_W": 0.0239,
    "GammanLA_P": 0.0796,
    "GammaA_LA": 0.192,
    "GammanF_LU": 0.017,
    "GammanF_Y": 0.991,
    "GammaF_Fi": 0.034,
    "GammaU_F": 0.1235,
    "Q_EFi": 0.004,
    "Q_EP": 0.014,
    "Q_EpsA": 0.3,
    "Q_AB": 0.038,
    "Q_LT": 0.02,
    "Q_LA": 0.53,
    "Lambda_MFi": 1,
    "Lambda_MP": 1,
    "Lambda_MY": 1,
    "Lambda_MT": 1,
    "Lambda_MA": 1,
    "Lambda_M": 1,
    "Lambda_Pho": 0.6666666666666666,
    "Lambda_W": 0.5586592178770949,
    "Lambda_E": 1,
    "Lambda_R": 0.37037037037037035,
    "sigma_Y": 0.5,
    "sigma_T": 0.2,
    "sigma_Fi": 0.2,
    "sigma_Eps": 1.6,
    "sigma_nLA": 0.5,
    "sigma_P": 0.2,
    "sigma_A": 1.14,
    "sigma_nF": 1.8,
    "sigma_F": 1.23,
    "sigma_U": 0.5,
}

df_typing_formatting = pd.DataFrame(
    OrderedDict(
        [
            (
                "type",
                [
                    "Elasticity of substitution",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "Supply elasticities",
                    "",
                    "",
                    "",
                    "",
                    "Quantity shares",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "Factor shares",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "Elasticity of conversion costs",
                    "",
                    "Carbon tax",
                ],
            ),
            (
                "name",
                [
                    "Food and non food (utility) ",
                    "Agric. output and fish in food (nested utility)",
                    "Timber, manufacturing and land products (nested utility)",
                    "Land and non-land (agric. prod)",
                    "Phosphor and fossil fuels (fertil. prod)",
                    "Phosphor, energy and water (nested agric. prod)",
                    "Fossil fuel, renewables and biofuel (energy prod)",
                    "Fossil fuels, intermediate inputs",
                    "Land, intermediate inputs",
                    "Energy services, intermediate inputs",
                    "Renewables",
                    "Fossil fuel",
                    "Water",
                    "Phosphate",
                    "Intermediates",
                    "Share of land used for agriculture",
                    "Share of land used for timber",
                    "Share of agri. prod. used for biofuels prod.",
                    "Share of energy used for agri. prod.",
                    "Share of fossil fuel used for fertilizer prod.",
                    "Share of fossil fuel used for energy prod.",
                    "Food (utility)",
                    "Fish (food)",
                    "Manufacturing (non-food)",
                    "Unused land (non-food)",
                    "Land (agric. prod)",
                    "Phospor (non-land)",
                    "Water (non-land)",
                    "Fossil fuel (fertilizer prod.)",
                    "Biofuels (energy services prod.)",
                    "Fossil fuel (energy services prod.)",
                    "Fossil fuel (fisheries.)",
                    "Land (timber prod.)",
                    "Energy (manufacturing.)",
                    "Energy services in (non-land)",
                    "Phosphate (fertilizer prod.)",
                    "Conversion costs timber",
                    "Conversion costs agriculture",
                    "Carbon tax",
                ],
            ),
            (
                "values",
                [
                    param_dict["sigma_U"],
                    param_dict["sigma_F"],
                    param_dict["sigma_nF"],
                    param_dict["sigma_A"],
                    param_dict["sigma_P"],
                    param_dict["sigma_nLA"],
                    param_dict["sigma_Eps"],
                    param_dict["sigma_Fi"],
                    param_dict["sigma_T"],
                    param_dict["sigma_Y"],
                    param_dict["Lambda_R"],
                    param_dict["Lambda_E"],
                    param_dict["Lambda_W"],
                    param_dict["Lambda_Pho"],
                    param_dict["Lambda_M"],
                    param_dict["Q_LA"],
                    param_dict["Q_LT"],
                    param_dict["Q_AB"],
                    param_dict["Q_EpsA"],
                    param_dict["Q_EP"],
                    param_dict["Q_EFi"],
                    param_dict["GammaU_F"],
                    param_dict["GammaF_Fi"],
                    param_dict["GammanF_Y"],
                    param_dict["GammanF_LU"],
                    param_dict["GammaA_LA"],
                    param_dict["GammanLA_P"],
                    param_dict["GammanLA_W"],
                    param_dict["GammaP_EP"],
                    param_dict["GammaEps_AB"],
                    param_dict["GammaEps_EEps"],
                    param_dict["GammaFi_EFi"],
                    param_dict["GammaT_LT"],
                    param_dict["GammaY_EpsY"],
                    param_dict["GammanLA_EpsA"],
                    param_dict["GammaP_Pho"],
                    param_dict["V_T"],
                    param_dict["V_A"],
                    param_dict["tau_E"],
                ],
            ),
            (
                "keys",
                [
                    "sigma_U",
                    "sigma_F",
                    "sigma_nF",
                    "sigma_A",
                    "sigma_P",
                    "sigma_nLA",
                    "sigma_Eps",
                    "sigma_Fi",
                    "sigma_T",
                    "sigma_Y",
                    "Lambda_R",
                    "Lambda_E",
                    "Lambda_W",
                    "Lambda_Pho",
                    "Lambda_M",
                    "Q_LA",
                    "Q_LT",
                    "Q_AB",
                    "Q_EpsA",
                    "Q_EP",
                    "Q_EFi",
                    "GammaU_F",
                    "GammaF_Fi",
                    "GammanF_Y",
                    "GammanF_LU",
                    "GammaA_LA",
                    "GammanLA_P",
                    "GammanLA_W",
                    "GammaP_EP",
                    "GammaEps_AB",
                    "GammaEps_EEps",
                    "GammaFi_EFi",
                    "GammaT_LT",
                    "GammaY_EpsY",
                    "GammanLA_EpsA",
                    "GammaP_Pho",
                    "V_T",
                    "V_A",
                    "tau_E",
                ],
            ),
        ]
    )
)
